@page "/conversation/{*SessionId}"
@using AIStorm.Core.Models
@using AIStorm.Core.Services
@using Microsoft.Extensions.Logging
@inject IStorageProvider StorageProvider
@inject ILogger<Conversation> Logger

<PageTitle>Conversation - @(session?.Description ?? "Loading...")</PageTitle>

<div class="container-fluid mt-3">
    <div class="row">
        <div class="col-md-3">
            <AgentList Agents="@(session?.Agents ?? new List<Agent>())" AgentColors="@agentColors" />
        </div>
        <div class="col-md-9">
            <ConversationHistory Messages="@(session?.Messages ?? new List<StormMessage>())" AgentColors="@agentColors" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public required string SessionId { get; set; }

    private Session? session;
    private Dictionary<string, string> agentColors = new();

    private static readonly string[] colorPalette = new[]
    {
        "#0d6efd",  // Bootstrap primary
        "#dc3545",  // Bootstrap danger
        "#198754",  // Bootstrap success
        "#ffc107",  // Bootstrap warning
        "#6610f2",  // Bootstrap indigo
        "#fd7e14",  // Bootstrap orange
        "#20c997",  // Bootstrap teal
        "#d63384",  // Bootstrap pink
    };

    protected override Task OnInitializedAsync()
    {
        try
        {
            Logger.LogInformation("Loading conversation with session ID: '{SessionId}'", SessionId);
            
            // Load session data with embedded agents
            session = StorageProvider.LoadSession(SessionId);
            
            Logger.LogInformation("Session loaded successfully. Description: '{Description}', Messages: {Count}, Agents: {AgentCount}", 
                session.Description, session.Messages.Count, session.Agents.Count);
                
            // Assign colors to embedded agents
            for (int i = 0; i < session.Agents.Count; i++)
            {
                var agent = session.Agents[i];
                agentColors[agent.Name] = colorPalette[i % colorPalette.Length];
            }
            
            // Add color for "user" or "Human" messages
            agentColors["user"] = "#343a40";  // Bootstrap dark
            agentColors["Human"] = "#343a40"; // Bootstrap dark
            
            // Ensure we have colors for all message senders (in case there are messages from agents not in the embedded list)
            var messageSenders = session.Messages
                .Select(m => m.AgentName)
                .Where(name => !agentColors.ContainsKey(name))
                .Distinct();
                
            foreach (var sender in messageSenders)
            {
                // Assign a color from the palette
                var index = agentColors.Count;
                agentColors[sender] = colorPalette[index % colorPalette.Length];
            }
        }
        catch (Exception ex)
        {
            // Handle errors
            Logger.LogError(ex, "Error loading session: {ErrorMessage}", ex.Message);
        }
        
        return Task.CompletedTask;
    }
}
