@using Markdig
@using AIStorm.Core.Models

<div class="message @MessageClass" style="border-left: 4px solid @AgentColor">
    <div class="message-header">
        <strong style="color: @AgentColor">@Message.AgentName</strong>
        <small class="text-muted ms-2">@Message.Timestamp.ToString("g")</small>
    </div>
    <div class="message-content">
        @((MarkupString)RenderMarkdown(Message.Content))
    </div>
</div>

@code {
    [Parameter]
    public required StormMessage Message { get; set; }
    
    [Parameter]
    public required string AgentColor { get; set; }
    
    [Parameter]
    public string MessageClass { get; set; } = "";

    private string RenderMarkdown(string content)
    {
        var pipeline = new MarkdownPipelineBuilder()
            .UseAdvancedExtensions()
            .Build();
        return Markdown.ToHtml(content ?? string.Empty, pipeline);
    }
}

<style>
    .message {
        padding: 10px;
        margin-bottom: 15px;
        background-color: #f8f9fa;
        border-radius: 5px;
    }

    .message-header {
        margin-bottom: 5px;
    }

    .message-content {
        font-size: 1rem;
    }

    .message-content :deep(p:last-child) {
        margin-bottom: 0;
    }

    .message-content :deep(pre) {
        background-color: #f1f1f1;
        padding: 10px;
        border-radius: 4px;
        overflow-x: auto;
    }

    .message-content :deep(code) {
        background-color: #f1f1f1;
        padding: 2px 4px;
        border-radius: 3px;
    }

    .message-content :deep(blockquote) {
        border-left: 3px solid #6c757d;
        padding-left: 10px;
        color: #6c757d;
    }
</style>
