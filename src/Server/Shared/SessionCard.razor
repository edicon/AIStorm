@using AIStorm.Core.Models

<AistormCard 
    Title="@Session.Id"
    Subtitle=""
    StatusClass="@GetStatusClass()"
    CanExpand="false"
    IsClickable="false">
    
    <MetadataContent>
        <div class="metadata-tags">
            <span class="tag date">@Session.Created.ToString("yyyy-MM-dd")</span>
            <span class="tag">@Session.Agents.Count Agent@(Session.Agents.Count != 1 ? "s" : "")</span>
            <span class="tag">@Session.Messages.Count Message@(Session.Messages.Count != 1 ? "s" : "")</span>
        </div>
    </MetadataContent>
    
    <ChildContent>
        <MarkdownView Content="@(Session.Premise?.Content ?? "")" Truncate="true" MaxLength="100" />
    </ChildContent>
    
    <ActionContent>
        <div class="actions-left">
            @if (Session.Messages.Count == 0)
            {
                <a href="/session-editor/@Session.Id" class="btn btn-primary" title="Edit Session">
                    <i class="oi oi-pencil" aria-hidden="true"></i>
                </a>
            }
            else
            {
                <a href="/session-editor/@Session.Id" class="btn btn-secondary" title="View Session Details">
                    <i class="oi oi-info" aria-hidden="true"></i>
                </a>
            }
        </div>
        <div class="actions-right">
            <a href="/conversation/@Session.Id" class="btn btn-success" title="Open Conversation">
                <i class="oi oi-media-play" aria-hidden="true"></i>
            </a>
        </div>
    </ActionContent>
</AistormCard>

@code {
    [Parameter]
    public Session Session { get; set; } = null!;
    
    [Parameter]
    public EventCallback<Session> OnSelected { get; set; }
    
    private string GetStatusClass()
    {
        return Session.Messages.Count == 0 ? "status-empty" : "status-active";
    }
}
